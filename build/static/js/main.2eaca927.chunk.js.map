{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubeClick","id","cursor","month","day","year","Tasks","tasks","map","store","require","App","useState","tasksList","each","value","key","get","getStoredTasks","setTasks","showAddTask","setShowAddTask","setText","setDay","setMonth","setYear","Date","dateState","setDateState","display","gridTemplateColumns","gridGap","onChange","e","getDate","getMonth","getFullYear","tileContent","date","i","length","calendarType","onSubmit","preventDefault","Math","floor","random","newTask","set","addTask","alert","type","placeholder","target","pattern","filter","remove","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eaca927.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return <button onClick={onClick} \r\n            style = {{backgroundColor: color}} \r\n            className = 'btn'>\r\n        {text}\r\n        </button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue', text: 'Button'\r\n}\r\nButton.propTypes = {\r\n    text: PropTypes.string, color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n\r\n\r\n//This implementation would also work\r\n/*\r\nconst Button = (props) => {\r\n    return <button style = {{backgroundColor: props.color}} className = 'btn'>{props.text}</button>\r\n}\r\n*/","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    return (\r\n        <header className = 'header'>\r\n            <h1> {title} </h1>\r\n            <Button color='blue' text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Events',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n/*\r\nconst headingStyle = {\r\n    color: 'red', backgroundColor: 'black',\r\n}*/\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={ `task ${task.reminder ? 'reminder' : ''}` } onDoubeClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} \r\n                <FaTimes style={{color: 'red', cursor: 'pointer'}} \r\n                onClick={() => onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.month+\"/\"+task.day+\"/\"+task.year}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\n//map will create a list by taking in a function\r\n//map requires us to include a unique key prop used to identify elements\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n\r\n    return (\r\n        <>\r\n            {tasks.map( \r\n                (task) => ( <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} /> )\r\n                //(task, index) => ( <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} /> )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\nimport {useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\n\nimport Calendar from 'react-calendar';\nimport './components/CalendarStyle.css';\nimport moment from 'moment'\n\nvar store = require('store')\n\nfunction App() {\n\n  //Get each object stored and make a list from it\n  const getStoredTasks = () => {\n    var tasksList = []\n    store.each(function(value, key) {\n      tasksList = [...tasksList, store.get(key)] \n    })\n    return tasksList\n  }\n\n  const [tasks, setTasks] = useState( getStoredTasks() )\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  /* Add Task */\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task}\n    setTasks( [...tasks, newTask] )\n    store.set(id, newTask)\n    //The add task section will close after the user adds a task.\n    //If you want the addTask to remain open, remove the setShowAddTask below.\n    setShowAddTask(false)\n  }\n\n  /* Delete Task function that takes a task id as an argument */\n  const deleteTask = (id) => {\n    setTasks(tasks.filter( (task) => task.id !== id ))\n    store.remove(id)\n  }\n\n  /* Toggle reminder */\n  const toggleReminder = (id) => {\n    console.log(id)\n    setTasks(tasks.map( (task) => task.id === id ? { ...task, reminder: !task.reminder} : task ))\n  }\n\n\n\n\n\n  /* Date components */\n  const [text, setText] = useState('')\n  const [day, setDay] = useState(1)\n  const [month, setMonth] = useState(1)\n  const [year, setYear] = useState(2021)\n\n  const onSubmit = (e) => {\n      e.preventDefault()\n      if (!text) {\n          alert('Please add text')\n          return\n      }\n      addTask( {text, day, month, year} )\n\n      // clear form \n      setText('')\n      setDay(1)\n      setMonth(1)\n      setYear(2021)\n  }\n\n\n  //Date states\n  const [dateState, setDateState] = useState(new Date());\n\n  //Determines what content is shown in each date tile of the calander\n  const tileContent = ({date}) => {\n    var i = 0;\n    for (i=0; i < tasks.length; i++) {\n      if ( date.getFullYear() === (tasks[i].year - 0) && date.getMonth() === (tasks[i].month - 1) && date.getDate() === (tasks[i].day - 0) ) {\n        //return <p style={{ color: \"#17caf7\" }} >{tasks[i].text}</p>\n        return <tileContent><b><p style={{ color: \"#17caf7\" }} >{tasks[i].text}</p></b></tileContent>\n      }\n    }\n    return <p></p>\n  }\n\n\n  //When a date on the calendar is selected, open the add task with the date filled in\n  function onChange(e) {\n      setDateState(e);\n      setText('')\n      setDay(e.getDate())\n      setMonth(e.getMonth()+1)\n      setYear(e.getFullYear())\n      setShowAddTask(true);\n  }\n\n\n\n  return (\n  <div className=\"appContainer\">\n    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2, 1fr)\", gridGap: 10 }}>\n\n      <div className=\"Calander\">\n        <Calendar onChange={onChange} value={dateState} tileContent={tileContent} calendarType={\"US\"} />\n      </div>\n\n      <div className=\"Events\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n        {showAddTask && \n          <form className='add-form' onSubmit={onSubmit} >\n            <div className='form-control'>\n                <label>Event</label>\n                <input type='text' placeholder='Add Event' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            \n            <div className=\"Date\" style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, 1fr)\", gridGap: 5 }}>\n              <div className='form-control'>\n                  <label>Month</label>\n                  <input type=\"text\" pattern=\"[0-9]*\" placeholder='MM' value={month} onChange={(e) => setMonth(e.target.value)} />\n              </div>\n              \n              <div className='form-control'>\n                  <label>Day</label>\n                  <input type=\"text\" pattern=\"[0-9]*\"  placeholder='DD' value={day} onChange={(e) => setDay(e.target.value)} />\n              </div>\n              \n              <div className='form-control'>\n                  <label>Year</label>\n                  <input type=\"text\" pattern=\"[0-9]*\"  placeholder='YYYY' value={year} onChange={(e) => setYear(e.target.value)} />\n              </div>\n            </div>\n            <input type='submit' value='Save Event' className='btn btn-block' />\n          </form>\n\n        }\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      </div>\n    </div>\n  </div>\n  );\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}